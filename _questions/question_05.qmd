<!-- question-type: inclass -->
### Exercise 5: Improving the Price Distribution Plot

**(a).** Together with your peers, propose three changes you want to make to the plot in Exercise 2. Discuss the rationale behind each change and how it might improve the visualization.

**(b).** Work with your tutor to create an agreed upon list of changes to make to the plot. What steps do you need to take to make these improvements?

**(c).** Implement the changes suggested in the R code.

<!-- BEGIN PROFILE:r-teaching-guide -->
::: {.content-visible when-profile="r-teaching-guide"}

::: {.teaching-block}

::: {.teaching-block-header}
Teaching Note
:::

::: {.teaching-block-body}

üéØ **Learning Objective** 
Students should:

- Refine a histogram-based visualization to better communicate distributional differences
- Understand why log scales are helpful for skewed price data
- Recognize and apply proportional y-axis scaling in faceted plots
- Incorporate accessibility-aware color palettes

‚úÖ   **Core Concepts to Highlight**

NOTE: Make this line of code available to students and explain what it means -- remind them they dont need to know it themselves ("We‚Äôre introducing more complex ggplot tools here ‚Äî don‚Äôt stress about the syntax yet, focus on what the chart shows and how small changes help us tell a clearer story.")

```r
aes(y = after_stat(count) / 
     tapply(after_stat(count), after_stat(PANEL), sum)[after_stat(PANEL)])
```
- Skewed distributions like housing prices often benefit from a log-transformed x-axis to reveal patterns in lower price brackets
- Proportions, rather than raw counts, are helpful when comparing multiple groups (facets), especially if group sizes differ
- after_stat(count) / ... computes within-facet proportions ‚Äî we won‚Äôt unpack the full syntax yet, but students should understand the concept:  ‚ÄúWe‚Äôre dividing each bar height by the total number of listings for that dwelling type, so the height shows the share of that type‚Äôs listings in each price range.‚Äù
- Color palettes like `scale_fill_okabe_ito()` ensure plots are clear for all readers ‚Äî including those with color vision deficiencies

üí¨ **Suggested In-Class Prompts** (if needed)

‚ÄúWhat does using a log x-axis reveal that the original plot might hide?‚Äù

‚ÄúHow does changing to proportions shift the way we interpret the differences across dwelling types?‚Äù

‚ÄúWhy might counts be misleading when the number of houses and apartments differ?‚Äù

‚ÄúWhat would happen if we removed faceting and used color alone to distinguish types?‚Äù
List as needed

üìå **Common Misunderstandings**

- Students may believe log scales change the data, not just the display
- Assuming y-axis values are still raw counts when they‚Äôve become proportions ‚Äî emphasize interpretation
- Confusing the technical implementation of `after_stat(...)` with something they are expected to write themselves ‚Äî reassure them it‚Äôs a premade component for now
- Thinking accessibility features like color palettes are optional or cosmetic ‚Äî emphasize their importance for real-world communication

:::

:::

:::
<!-- END PROFILE:r-teaching-guide -->

<!-- BEGIN PROFILE:r-solutions -->
::: {.content-visible when-profile="r-solutions" when-profile="r-teaching-guide"}

::: {.solution-block}

::: {.solution-block-header}
Solution
:::

::: {.solution-block-body}

```{r}
# Improved histogram of price by dwelling type
price_hist <- 
    housing |>
    ggplot(aes(x = price, fill = type)) +
  # Show proportions instead of raw counts (within each facet)
  geom_histogram(
    aes(y = after_stat(count) / 
             tapply(after_stat(count), after_stat(PANEL), sum)[after_stat(PANEL)]),
    bins = 50
  ) +
  # Log-scale the x-axis to handle price skew
  scale_x_continuous(
    trans = "log10",
    labels = scales::dollar
  ) +
  # Format y-axis as percentages
  scale_y_continuous(
    labels = scales::label_percent()
  ) +
  # Add labels and title
  labs(
    x = "Price", 
    y = "Share of Listings", 
    title = "Prices by Dwelling Type"
  ) +
  # Create separate plots for each dwelling type
  facet_wrap(~type) +
  # Rotate x-axis labels for readability
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  # Use colorblind-friendly fill palette
  scale_fill_okabe_ito() +
  # Center the title
  theme(
    plot.title = element_text(hjust = 0.5)
  )

price_hist
```
:::

:::

:::
<!-- END PROFILE:r-solutions -->